name: Continuous Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - master

jobs:
  detect-deployment-type:
    name: Detect Deployment Type
    runs-on: ubuntu-latest
    outputs:
      src_changed: ${{ steps.filter.outputs.src_changed }}
      deploy_prod: ${{ steps.detect_type.outputs.deploy_prod }}
      deploy_dev: ${{ steps.detect_type.outputs.deploy_dev }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check for changes in src/
        id: filter
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^src/'; then
            echo "src_changed=true" >> $GITHUB_OUTPUT
          else
            echo "src_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Determine deployment type
        id: detect_type
        run: |
          MSG="${{ github.event.head_commit.message }}"

          if echo "$MSG" | grep -q 'chore(release): release portfolio@'; then
            echo "deploy_prod=true" >> $GITHUB_OUTPUT
            echo "deploy_dev=false" >> $GITHUB_OUTPUT
          else
            echo "deploy_prod=false" >> $GITHUB_OUTPUT
            echo "deploy_dev=true" >> $GITHUB_OUTPUT
          fi

  deploy-production:
    name: Deploy to Production
    needs: detect-deployment-type
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/master' &&
      needs.detect-deployment-type.outputs.deploy_prod == 'true'
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Bun Runtime
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Vercel CLI
        run: bun install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Install Project Dependencies
        run: bun install --frozen-lockfile

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: deploy
        run: |
          URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Deployed to: $URL"

  deploy-development:
    name: Deploy to Development
    needs: detect-deployment-type
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/master' &&
      needs.detect-deployment-type.outputs.deploy_dev == 'true' &&
      needs.detect-deployment-type.outputs.src_changed == 'true'
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Bun Runtime
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Vercel CLI
        run: bun install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Install Project Dependencies
        run: bun install --frozen-lockfile

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: deploy
        run: |
          URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Deployed to: $URL"
